# roles/ansible-role-memcached/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - install
    - configure

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Ensure directories exists
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('openio') }}"
    group: "{{ item.group | default('openio') }}"
    mode: "{{ item.mode | default(0755) }}"
  with_items:
    - path: "/etc/gridinit.d/{{ openio_memcached_namespace }}"
    - path: "/var/log/oio/sds/{{ openio_memcached_namespace }}/{{ openio_memcached_servicename }}"
      owner: "{{ syslog_user }}"
      mode: "0750"
  tags: configure

- name: Generate configuration files
  template:
    src: gridinit_memcached.conf.j2
    dest: "{{ openio_memcached_gridinit_dir }}/\
      {{ openio_memcached_gridinit_file_prefix }}{{ openio_memcached_servicename }}.conf"
    owner: openio
    group: openio
    mode: 0644
  tags: configure
  register: _memcached_conf

- name: "restart memcached to apply the new configuration"
  shell: |
    gridinit_cmd reload
    gridinit_cmd restart  {{ openio_memcached_namespace }}-{{ openio_memcached_servicename }}
  register: _restart_memcached
  when:
    - _memcached_conf is changed
    - not openio_memcached_provision_only
  tags: configure

- block:
    - name: "Ensure memcached is started"
      command: gridinit_cmd start {{ openio_memcached_namespace }}-{{ openio_memcached_servicename }}
      register: _start_memcached
      changed_when: '"Success" in _start_memcached.stdout'
      when:
        - not openio_memcached_provision_only
        - _restart_memcached is skipped
      tags: configure

    - name: check memcached
      wait_for:
        host: "{{ openio_memcached_bind_address }}"
        port: "{{ openio_memcached_bind_port }}"
      register: _memcached_check
      retries: 3
      delay: 5
      until: _memcached_check is success
      changed_when: false
      tags: configure
      when:
        - not openio_memcached_provision_only
  when: openio_bootstrap | d(false)
...
